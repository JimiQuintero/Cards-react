{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","components/Contador.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","className","style","background","src","alt","Cards","map","url","Contador","inicial","factor","useState","contador","setContador","onClick","actual","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MA2BeA,MApBf,YAA8C,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjC,OACE,sBAAKC,UAAU,OAAOC,MAAO,CAC3BC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MADZ,UAGE,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QCsCIS,EAhDD,WA8BZ,OAEE,aADA,CACA,qBA/BW,CACX,CACE,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YAUHC,KAAI,YAAoC,IAAjCV,EAAgC,EAAhCA,KAAMW,EAA0B,EAA1BA,IAAKT,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC7B,OAAO,cAAC,EAAD,CAELH,KAAMA,EACNC,IAAKU,EACLT,OAAQA,EACRC,OAAQA,GAJHH,S,OCjBFY,EApBE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAE3B,EAAgCC,mBAASF,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAQA,OACE,gCACE,4CAAeD,KACf,uBACA,wBAAQE,QARK,WACfD,GAAY,SAACE,GAAD,OAAYA,EAASL,MAO/B,sBACA,wBAAQI,QANM,kBAAMD,EAAYD,EAAWF,IAM3C,2BCDSM,EAbH,WACV,OAEE,cADA,CACA,iBACE,cAAC,EAAD,CAAUP,QAAS,EAAGC,OAAQ,IAC9B,uBACA,uBACA,uBACA,cAAC,EAAD,QCCSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7b592eac.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n// Utilizando PropTypes para validar el tipo de props\nimport PropTypes from 'prop-types';\n\n//console.log(PropTypes);\n\nfunction Card({ lang, img, fcolor, scolor }) {\n  return (\n    <div className=\"card\" style={{\n      background: `linear-gradient(to left, ${fcolor}, ${scolor})`\n    }}>\n      <img src={img} alt=\"lang.svg\" />\n      <h3>{lang}</h3>\n    </div>\n  )\n}\n\n// Utilizando PropTypes para validar el tipo de props\n\nCard.propTypes = {\n  lang: PropTypes.string,\n  img: PropTypes.string,\n  fcolor: PropTypes.string,\n  scolor: PropTypes.string\n}\n\nexport default Card\n","import React from 'react';\nimport Card from './Card'\n\nconst Cards = () => {\n  const data = [\n    {\n      \"lang\": \"Python\",\n      \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\n      \"fcolor\": \"#00c3ff\",\n      \"scolor\": \"#ffff1c\"\n    },\n    {\n      \"lang\": \"Java\",\n      \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\n      \"fcolor\": \"#D31027\",\n      \"scolor\": \"#EA384D\"\n    },\n    {\n      \"lang\": \"React\",\n      \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\n      \"fcolor\": \"#000428\",\n      \"scolor\": \"#004e92\"\n    },\n    {\n      \"lang\": \"Perl\",\n      \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\n      \"fcolor\": \"#cc2b5e\",\n      \"scolor\": \"#753a88\"\n    }\n  ];\n\n  //console.log(data);\n\n  return (\n    // Utilizando Fragment <> </>\n    <>\n      {\n        data.map(({ lang, url, fcolor, scolor }) => {\n          return <Card\n            key={lang}\n            lang={lang}\n            img={url}\n            fcolor={fcolor}\n            scolor={scolor}\n          />\n        })\n      }\n    </>\n  )\n}\n\nexport default Cards\n","import { useState } from 'react'\n// Destructurando las props, no coloco props sino { nombre_props}\nconst Contador = ({ inicial, factor }) => {\n  // Manejo del Estado con useState\n  const [contador, setContador] = useState(inicial);\n\n  //console.log(props);\n\n  const aumentar = () => {\n    setContador((actual) => actual + factor);\n  };\n  const disminuir = () => setContador(contador - factor);\n  return (\n    <div>\n      <h1>Contador: {contador}</h1>\n      <hr />\n      <button onClick={aumentar}>Aumentar</button>\n      <button onClick={disminuir}>Disminuir</button>\n    </div>\n  )\n}\n\nexport default Contador\n\n","import Cards from \"./components/Cards\";\nimport Contador from \"./components/Contador\";\n\nconst App = () => {\n  return (\n    // Aqui coloco las props ej inicial\n    <div>\n      <Contador inicial={5} factor={3} />\n      <br></br>\n      <hr />\n      <br />\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}